%% Doing a bit of spring cleaning 
clear
clf 
close all
clc 
%% Adding a few paths and loading in the data  
addpath('Data\')
addpath('..\')
addpath("..\Consensus ADMM\Functions\")
addpath("..\Global controller\Simple Simulink implemtation\Functions\")
addpath("..\Consensus ADMM\Simulink implementing\Functions\")

c=scaled_standard_constants; 
ADMMCon=load('consensus_ADMM.mat'); 
globalCon=load('global.mat');
%% Next it is desired to pick out the end flows for the consensus ADMM 
%Find the columen which a new one starts
indicesOri = find(ADMMCon.ADMM_1.k== 1); 
%Subcstat one such we get the end, and removing the unused columen: 
indices=indicesOri(2:end)-1;

for index=2:size(indices,2) 
    ADMMCon.x1used(:,index-1)=ADMMCon.ADMM_1.x_i(:,indices(index));
    ADMMCon.x2used(:,index-1)=ADMMCon.ADMM_2.x_i(:,indices(index));
    ADMMCon.x3used(:,index-1)=ADMMCon.ADMM_3.x_i(:,indices(index));
end 
%% Picking out the used pump mass flows: 
for time=1:size(ADMMCon.x1used,2)
    for index=1:48 
        if mod(index,2)== 1 
            %odd number
            ADMMCon.flowsUsed(index,time) = ADMMCon.x1used(index,time);
        else 
            %even number
            ADMMCon.flowsUsed(index,time) = ADMMCon.x2used(index,time);
        end 
    end 
end 

%% 
%Determinging the electricity bill   and cost function, 
%[Bill]= eletrictyBillV2(uAll,Je,c,V) 
for index=1:240
    c.d = globalCon.global_con.demand_pred(:,index); 
    [ElPrices] = globalCon.global_con.electricity_price(:,index); 
    %Eletricity bill 
    if index==1 %% HERTIL!
        [globalCon.Bill(index,1)]= eletrictyBillV2(globalCon.global_con.Solution(:,index),ElPrices,c,globalCon.global_con.tower_tank_level(1,index)/1000*c.At);


        [ADMMCon.Bill(index,1)]= eletrictyBillV2(ADMMCon.flowsUsed(:,index),ElPrices,c,ADMMCon.tow.tank_tower_mm(:,index)/1000*c.At);


        procentEldiff(index,1)=(ADMMCon.Bill(index,1)-globalCon.Bill(index,1))/globalCon.Bill(index,1)*100;

    else
        [globalCon.Bill(index,1)]= eletrictyBillV2(globalCon.global_con.Solution(:,index),ElPrices,c,globalCon.global_con.tower_tank_level(1,index)/1000*c.At);
        globalCon.Bill(index,1)=globalCon.Bill(index,1)+globalCon.Bill(index-1,1);


        [ADMMCon.Bill(index,1)]= eletrictyBillV2(ADMMCon.flowsUsed(:,index),ElPrices,c,ADMMCon.tow.tank_tower_mm(:,index)/1000*c.At);
        ADMMCon.Bill(index,1)=ADMMCon.Bill(index,1)+ADMMCon.Bill(index-1,1);


       procentEldiff(index,1)=(ADMMCon.Bill(index,1)-globalCon.Bill(index,1))/globalCon.Bill(index,1)*100;

    end 
        
end 
%% Plotting electricity bill and procentwise difference: 
subplot(2,1,1)
hold on 


hold off 
xlabel('Time [h_a]')
ylabel('El')


%% Printing the results: 
disp("Bill consensus ADMM [EURO]:") 
disp(ADMMCon.Bill(end))
disp("Bill global [EURO]:") 
disp(globalCon.Bill(end))





